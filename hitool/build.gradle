apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.github.dcendents.android-maven'
group = 'com.github.25687888'

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode = 153
        versionName = "1.5.3"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true//使用矢量图配置
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        unsigned {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    api 'androidx.cardview:cardview:1.0.0'
    api 'androidx.appcompat:appcompat:1.1.0-rc01'
    api 'androidx.legacy:legacy-support-v4:1.0.0'  //v4
    api 'androidx.recyclerview:recyclerview:1.0.0'
    api 'com.google.android.material:material:1.0.0' //design
//    api 'androidx.percentlayout:percentlayout:1.0.0' //百分比布局
//    api 'androidx.vectordrawable:vectordrawable:1.0.0' //矢量
    api 'androidx.constraintlayout:constraintlayout:1.1.3'
    api 'androidx.multidex:multidex:2.0.1'
    // ormlite 数据库
    api "com.j256.ormlite:ormlite-android:$ormlite_version"
    api "com.j256.ormlite:ormlite-core:$ormlite_version"
    // Kotlin
    api 'androidx.core:core-ktx:1.1.0'
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api "org.jetbrains.anko:anko-common:$anko_version"
    api "org.jetbrains.anko:anko-sqlite:$anko_version"
    //kotlin coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    //网络基础框架okhttp
    api 'com.squareup.okhttp3:okhttp:3.12.1'
    api 'com.squareup.okio:okio:2.2.2'
    //网络框架okgo
    api 'com.lzy.net:okgo:3.0.4' // 网络请求
    api 'com.lzy.net:okrx2:2.0.2'//可以单独使用，不需要依赖下方的扩展包
    api 'com.lzy.net:okserver:2.0.5' //RxJava扩展支持，根据需要添加
    api 'com.squareup.okio:okio:2.2.2'

    //rx
    api 'io.reactivex.rxjava2:rxandroid:2.1.1'
    // 解决RxJava内存泄漏
    api 'com.uber.autodispose:autodispose:1.3.0'
    api 'com.uber.autodispose:autodispose-android-archcomponents:1.3.0'

    // EventBus
    api 'org.greenrobot:eventbus:3.1.1'
    //腾讯MMKV 取代sp
    api 'com.tencent:mmkv:1.0.23'
    // 图片工具glide
    api 'com.github.bumptech.glide:glide:4.10.0'
    kapt 'com.github.bumptech.glide:compiler:4.10.0'
    api 'com.github.bumptech.glide:okhttp3-integration:4.10.0'

    api 'com.blankj:utilcode:1.25.9'//柯基 AndroidUtilCode
    // json相关
    api 'com.google.code.gson:gson:2.8.5'
    // 动画
    api 'com.nineoldandroids:library:2.4.0'
    api 'com.github.florent37:viewanimator:1.1.0'
}

// ---------------------- JitPack ----------------------
// 打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// 制作文档(Javadoc)
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}